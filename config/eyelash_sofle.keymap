#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3            &kp N4  &kp N5                      &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&mo 2       &kp Q      &kp W         &kp E             &kp R   &kp T                       &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D             &kp F   &kp G                       &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C             &kp V   &kp B                       &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 1   &kt LS(LA(LG(NUMBER_4)))    &kp ENTER        &kp ENTER  &kp SPACE  &mo 3      &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        Mod {
            bindings = <
&kp GRAVE   &kp F1             &kp F2           &kp F3       &kp F4         &kp F5               &mmv MOVE_UP     &kp F6     &kp F7    &kp F8    &kp F9     &kp F10           &trans
&trans      &kt LA(BACKSPACE)  &kt LS(LC(TAB))  &kt LG(T)    &kt LC(TAB)    &mkp MB4             &mmv MOVE_DOWN   &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp MINUS         &kp EQUAL
&trans      &kp CAPS           &kt LA(LEFT)     &kt LG(TAB)  &kt LA(RIGHT)  &kt LA(BACKSPACE)    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &none              &kt LG(LEFT)     &kt LG(W)    &kt LG(RIGHT)  &rgb_ug RGB_SPI      &mmv MOVE_RIGHT  &none      &none     &none     &none      &none             &trans
&kp C_MUTE  &trans             &trans           &trans       &trans         &trans               &mkp LCLK        &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        Mouse {
            bindings = <
&none   &none   &none      &none      &none      &none     &mmv MOVE_UP     &none           &none           &none           &none            &none        &trans
&trans  &none   &none      &trans     &trans     &trans    &mmv MOVE_DOWN   &msc SCRL_DOWN  &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &none        &none
&trans  &none   &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans    &mmv MOVE_LEFT   &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none        &none
&trans  &none   &none      &none      &trans     &trans    &mmv MOVE_RIGHT  &trans          &trans          &sys_reset      &soft_off        &bootloader  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &mkp LCLK        &trans          &mkp LCLK       &mkp RCLK       &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Fn {
            bindings = <
&trans  &trans  &trans                  &trans                &trans                    &trans    &trans  &trans           &trans                  &trans                &trans             &trans           &trans
&trans  &trans  &kt LA(LG(SEMICOLON))   &kt LA(LG(UP_ARROW))  &kt LA(LG(SINGLE_QUOTE))  &trans    &trans  &msc SCRL_DOWN   &kt LA(LG(SEMI))        &kt LA(LG(UP_ARROW))  &kt LA(LG(SEMI))   &kp C_VOLUME_UP  &trans
&trans  &trans  &kt LA(LG(LEFT_ARROW))  &kt LA(LG(DOWN))      &kt LA(LG(RIGHT))         &trans    &trans  &msc SCRL_UP     &kt LA(LG(LEFT_ARROW))  &kt LA(LG(DOWN))      &kt LA(LG(RIGHT))  &kp C_VOL_DN     &trans
&trans  &trans  &kt LA(LG(PERIOD))      &trans                &kt LA(LG(SLASH))         &trans    &trans  &trans           &kt LA(LG(PERIOD))      &trans                &kt LA(LG(SLASH))  &kp K_MUTE       &trans
&trans  &trans  &trans                  &trans                &trans                    &trans    &trans  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG         &trans                &trans             &trans
            >;
        };
    };
};
